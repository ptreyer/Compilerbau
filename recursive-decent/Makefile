###############################################################################
# Project:  COCKTAIL training
# Descr:    A Recursive Decent Parser for expressions
# Kind:     Makefile
# Author:   Dr. Juergen Vollmer <Juergen.Vollmer@informatik-vollmer.de>
# $Id: Makefile,v 1.14 2007/06/03 16:54:53 vollmer Exp $
###############################################################################

# The executable to produce:
MAIN		= parser

# Source files
SRC_H		= parser.h
SRC_C		= parser-solution.c main.c
SRC		= expr.rex

# Generated files
GEN		=
GEN_H		= expr_scan.h expr_scanSource.h
GEN_C		= expr_scan.c expr_scanSource.c

###############################################################################

include ../config.mk

###############################################################################

# Create your parser
all: $(MAIN)

# Run the test suite
# In case of an error, MAKE termiantes processing
# To let MAKE continue, add a - (hyphen) before the command.
# The test cases 1-4 should be ok, while 5-8 contain some syntax error
# and therefore MAKE should ignore the errors
test:
	./$(MAIN) test1
	./$(MAIN) test2
	./$(MAIN) test3
	./$(MAIN) test4
	- ./$(MAIN) test5
	- ./$(MAIN) test6
	- ./$(MAIN) test7
	- ./$(MAIN) test8

###############################################################################

# Generate the scanner
expr_scan.c: expr.rex
	rex -cdis -y expr.rex
	rm -f expr_scanDrv.c

# These files are generated by REX too:
expr_scan.h: 	   expr_scan.c
expr_scanSource.h: expr_scan.c
expr_scanSource.c: expr_scan.c

###############################################################################

include ../common.mk

###############################################################################

